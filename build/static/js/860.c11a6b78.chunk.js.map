{"version":3,"file":"static/js/860.c11a6b78.chunk.js","mappings":"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","sources":["../../../funniversaries-npm/pkg/funniversaries_bg.js"],"sourcesContent":["import * as wasm from './funniversaries_bg.wasm';\n\nconst lTextDecoder = typeof TextDecoder === 'undefined' ? (0, module.require)('util').TextDecoder : TextDecoder;\n\nlet cachedTextDecoder = new lTextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nlet cachegetUint8Memory0 = null;\nfunction getUint8Memory0() {\n    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.memory.buffer) {\n        cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachegetUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nconst heap = new Array(32).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nlet heap_next = heap.length;\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nfunction getObject(idx) { return heap[idx]; }\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nconst lTextEncoder = typeof TextEncoder === 'undefined' ? (0, module.require)('util').TextEncoder : TextEncoder;\n\nlet cachedTextEncoder = new lTextEncoder('utf-8');\n\nconst encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n    return cachedTextEncoder.encodeInto(arg, view);\n}\n    : function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n});\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length);\n        getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len);\n\n    const mem = getUint8Memory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3);\n        const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n\n        offset += ret.written;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n/**\n* @param {string} date\n* @returns {any}\n*/\nexport function generate_anniversaries(date) {\n    var ptr0 = passStringToWasm0(date, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ret = wasm.generate_anniversaries(ptr0, len0);\n    return takeObject(ret);\n}\n\nexport function __wbindgen_string_new(arg0, arg1) {\n    var ret = getStringFromWasm0(arg0, arg1);\n    return addHeapObject(ret);\n};\n\nexport function __wbindgen_object_drop_ref(arg0) {\n    takeObject(arg0);\n};\n\nexport function __wbindgen_json_parse(arg0, arg1) {\n    var ret = JSON.parse(getStringFromWasm0(arg0, arg1));\n    return addHeapObject(ret);\n};\n\nexport function __wbg_log_3445347661d4505e(arg0) {\n    console.log(getObject(arg0));\n};\n\nexport function __wbg_getTime_10d33f4f2959e5dd(arg0) {\n    var ret = getObject(arg0).getTime();\n    return ret;\n};\n\nexport function __wbg_new0_fd3a3a290b25cdac() {\n    var ret = new Date();\n    return addHeapObject(ret);\n};\n\nexport function __wbindgen_throw(arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n};\n\n"],"names":["cachedTextDecoder","TextDecoder","module","require","ignoreBOM","fatal","decode","cachegetUint8Memory0","getUint8Memory0","buffer","wasm","Uint8Array","getStringFromWasm0","ptr","len","subarray","heap","Array","fill","undefined","push","heap_next","length","addHeapObject","obj","idx","getObject","takeObject","ret","dropObject","WASM_VECTOR_LEN","cachedTextEncoder","TextEncoder","encodeString","encodeInto","arg","view","buf","encode","set","read","written","generate_anniversaries","date","ptr0","malloc","realloc","mem","offset","code","charCodeAt","slice","passStringToWasm0","len0","__wbindgen_string_new","arg0","arg1","__wbindgen_object_drop_ref","__wbindgen_json_parse","JSON","parse","__wbg_log_3445347661d4505e","console","log","__wbg_getTime_10d33f4f2959e5dd","getTime","__wbg_new0_fd3a3a290b25cdac","Date","__wbindgen_throw","Error"],"sourceRoot":""}